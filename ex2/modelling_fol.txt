% first order logic version of model.pl

east(raptors).
east(wizards).
east(cavaliers).
east(pacers).
east(celtics).
east(bucks).
east(seventysixers).
east(heat).

west(rockets).
west(timberwolves).
west(thunder).
west(jazz).
west(worriors).
west(spurs).
west(blazers).
west(pelicans).

![X]:(team(X) <=> (east(X) | west(X))).
![X]:(~(east(X) & west(X))).
$distinct(raptors, wizards, cavaliers, pacers, celtics, bucks, seventysixers, heat, rockets, timberwolves, thunder, jazz, worriors, spurs, blazers, pelicans).

defeat(raptors, wizards).
defeat(cavaliers, pacers).
defeat(celtics, bucks).
defeat(seventysixers, heat).
defeat(cavaliers, raptors).
defeat(celtics, seventysixers).
defeat(cavaliers, celtics).
defeat(rockets, timberwolves).
defeat(jazz, thunder).
defeat(worriors, spurs).
defeat(pelicans, blazers).
defeat(rockets, jazz).
defeat(worriors, pelicans).
defeat(worriors, rockets).
defeat(worriors, cavaliers).

% posRankHigher
posRankHigher(rockets, raptors).
posRankHigher(raptors, worriors).
posRankHigher(worriors, celtics).
posRankHigher(celtics, seventysixers).
posRankHigher(seventysixers, cavaliers).
posRankHigher(cavaliers, blazers).
posRankHigher(blazers, pacers).
posRankHigher(pacers, thunder).
posRankHigher(thunder, jazz).
posRankHigher(jazz, pelicans).
posRankHigher(pelicans, spurs).
posRankHigher(spurs, timberwolves).
posRankHigher(timberwolves, heat).
posRankHigher(heat, bucks).
posRankHigher(bucks, wizards).

% recursive
![X, Y]:((posRankHigher(X, Y) | ?[Z]:(posRankHigher(Z, Y) & posHigher(X, Z))) => posHigher(X, Y)). 

% offRankHigher
offRankHigher(worriors, rockets).
offRankHigher(rockets, pelicans).
offRankHigher(pelicans, raptors).
offRankHigher(raptors, cavaliers).
offRankHigher(cavaliers, seventysixers).
offRankHigher(seventysixers, timberwolves).
offRankHigher(timberwolves, thunder).
offRankHigher(thunder, wizards).
offRankHigher(wizards, bucks).
offRankHigher(bucks, blazers).
offRankHigher(blazers, pacers).
offRankHigher(pacers, jazz).
offRankHigher(jazz, celtics).
offRankHigher(celtics, heat).
offRankHigher(heat, spurs).

% recursive
![X, Y]:((offRankHigher(X, Y) | ?[Z]:(offRankHigher(Z, Y) & offBetter(X, Z))) => offBetter(X, Y)). 

% defRankHigher
defRankHigher(jazz, spurs).
defRankHigher(spurs, celtics).
defRankHigher(celtics, heat).
defRankHigher(heat, blazers).
defRankHigher(blazers, raptors).
defRankHigher(raptors, rockets).
defRankHigher(rockets, pacers).
defRankHigher(pacers, thunder).
defRankHigher(thunder, seventysixers).
defRankHigher(seventysixers, wizards).
defRankHigher(wizards, bucks).
defRankHigher(bucks, timberwolves).
defRankHigher(timberwolves, worriors).
defRankHigher(worriors, cavaliers).
defRankHigher(cavaliers, pelicans).

% recursive
![X, Y]:((defRankHigher(X, Y) | ?[Z]:(defRankHigher(Z, Y) & defBetter(X, Z))) => defBetter(X, Y)). 

% intensional relations(rules)
![X]:(?[Y]:(team(X) & team(Y) & defeat(X, Y)) => firstRoundWinner(X)).

![X]:(?[Y]:(firstRoundWinner(X) & firstRoundWinner(Y) & defeat(X, Y)) => semiWinner(X)).

![X]:(?[Y]:(semiWinner(X) & semiWinner(Y) & defeat(X, Y)) => conferenceWinner(X)).

![X]:(?[Y]:(conferenceWinner(X) & conferenceWinner(Y) & defeat(X, Y)) => finalWinner(X)).

![X, Y]:(posHigher(X, Y) => homeAdvantage(X, Y)).

![X, Y]:(((east(X) & east(Y)) | (west(X) & west(Y))) & X!=Y & semiWinner(X) & semiWinner (Y) => conferenceFinal(X, Y)).

![X, Y]:(X!=Y & conferenceWinner(X) & conferenceWinner(Y) => nbaFinal(X, Y)).

![X]:(west(X) & conferenceWinner(X) => westChampion(X)).

![X]:(east(X) & conferenceWinner(X) => eastChampion(X)).

![X]:(finalWinner(X) => nbaChampion(X)).
